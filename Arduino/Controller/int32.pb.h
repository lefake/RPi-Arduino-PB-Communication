/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.6-dev */

#ifndef PB_INT32_PB_H_INCLUDED
#define PB_INT32_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _Int32 { 
    int32_t data; 
} Int32;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define Int32_init_default                       {0}
#define Int32_init_zero                          {0}

/* Field tags (for use in manual encoding/decoding) */
#define Int32_data_tag                           1

/* Struct field encoding specification for nanopb */
#define Int32_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, INT32,    data,              1)
#define Int32_CALLBACK NULL
#define Int32_DEFAULT NULL

extern const pb_msgdesc_t Int32_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Int32_fields &Int32_msg

/* Maximum encoded size of messages (where known) */
#define Int32_size                               11

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
